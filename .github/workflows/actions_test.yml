#
# By Huson
# 2024-03-05 15:37
#
# Description: BTest
#

name: Test Actions Parameters

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  REPO_TAG: v23.05.2
  CUR_OP_DIR: openwrt
  INSET_FILES_DIR: InsetFiles
  MY_WORK_HOME: workhome
  GET_ARCH: amd64
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: h_x86.config
  SYS_BASE_PARAM: Basic-Parameters.sh
  ADD_FEEDS_CONF: Add-Feeds-Conf.sh
  MOD_APP_CONF: Modify-APP-Conf.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    #permissions:
    #  contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Check Server Performance
      run: |
        echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo "CPU核心数量: $(nproc)"
        echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息:"
        echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "> set time and working-directory"
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /${MY_WORK_HOME}
        sudo chown ${USER}:${GROUPS} /${MY_WORK_HOME}

    - name: Test parameters
      id: compile
      run: |
        #git clone -b $REPO_TAG --depth=1 $REPO_URL $CUR_OP_DIR
        sudo mkdir $CUR_OP_DIR
        ln -sf /${MY_WORK_HOME}/${CUR_OP_DIR} ${GITHUB_WORKSPACE}/${CUR_OP_DIR}
        sudo mkdir -p ${CUR_OP_DIR}/bin/targets/x86/64
        sudo mkdir -p ${CUR_OP_DIR}/bin/targets/x86/64/packages
        cp $FEEDS_CONF ${CUR_OP_DIR}/bin/targets/x86/64/feeds.conf.default
        cp -r $INSET_FILES_DIR ${CUR_OP_DIR}/bin/targets/x86/64/${INSET_FILES_DIR}
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DEVICE_NAME=_x86" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: |
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -hT
        echo "======================="

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_${{ env.REPO_TAG }}_bin_${{ env.GET_ARCH }}${{ env.FILE_DATE }}
        path: ${{ env.CUR_OP_DIR }}/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        #cd openwrt/bin/targets/*/*
        #rm -rf packages
        #echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "FIRMWARE=${CUR_OP_DIR}/bin" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_${{ env.REPO_TAG }}_bin_${{ env.GET_ARCH }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        [ ${UPLOAD_GOFILE} = true && ${{ steps.gofile.outputs.url }} ] && echo "🔗 [GoFile](${{ steps.gofile.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    #- name: Remove old Releases
    #  uses: dev-drprasad/delete-older-releases@master
    #  if: env.UPLOAD_RELEASE == 'true' && !cancelled()
    #  with:
    #    keep_latest: 3
    #    delete_tags: true
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
